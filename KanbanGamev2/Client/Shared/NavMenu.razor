@using KanbanGamev2.Client.Components
@using KanbanGamev2.Client.Services
@inject IGameRestartService GameRestartService
@inject KanbanGamev2.Shared.Services.IGameStateService GameStateService
@inject NavigationManager Navigation
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">KanbanGamev2</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="gamemaster">
                <span class="oi oi-crown text-warning" aria-hidden="true"></span> Game Master
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <div class="nav-link">
                <span class="oi oi-list" aria-hidden="true"></span> Data Views
            </div>
            <div class="nav-item px-3 ms-3">
                <NavLink class="nav-link" href="employees">
                    <span class="oi oi-people" aria-hidden="true"></span> Employees
                </NavLink>
            </div>
            <div class="nav-item px-3 ms-3">
                <NavLink class="nav-link" href="features">
                    <span class="oi oi-star" aria-hidden="true"></span> Features
                </NavLink>
            </div>
            <div class="nav-item px-3 ms-3">
                <NavLink class="nav-link" href="tasks">
                    <span class="oi oi-task" aria-hidden="true"></span> Tasks
                </NavLink>
            </div>
        </div>

        <div class="nav-item px-3">
            <div class="nav-link">
                <span class="oi oi-grid-three-up" aria-hidden="true"></span> Kanban Boards
            </div>
            <div class="nav-item px-3 ms-3">
                <NavLink class="nav-link" href="analysis-board">
                    <span class="oi oi-graph" aria-hidden="true"></span> Analysis Board
                </NavLink>
            </div>
            <div class="nav-item px-3 ms-3">
                <NavLink class="nav-link" href="backend-board">
                    <span class="oi oi-server" aria-hidden="true"></span> Backend Board
                </NavLink>
            </div>
            <div class="nav-item px-3 ms-3">
                <NavLink class="nav-link" href="frontend-board">
                    <span class="oi oi-monitor" aria-hidden="true"></span> Frontend Board
                </NavLink>
            </div>
            @if (GameStateService.IsSummaryBoardVisible)
            {
                <div class="nav-item px-3 ms-3">
                    <NavLink class="nav-link" href="summary-board">
                        <span class="oi oi-dashboard" aria-hidden="true"></span> Summary Board
                    </NavLink>
                </div>
            }
        </div>
        <div class="nav-item px-3">
            <div class="navbar-nav ms-auto">
                <GameStatus />
            </div>
        </div>
        
        <div class="nav-item px-3 mt-auto">
            <button class="btn btn-danger w-100" @onclick="ShowRestartConfirmation" title="Restart Game - Reset all progress">
                <span class="oi oi-reload" aria-hidden="true"></span> Restart Game
            </button>
        </div>
    </nav>
</div>

<RestartConfirmationModal 
    IsVisible="@_showRestartConfirmation" 
    IsVisibleChanged="@((bool value) => _showRestartConfirmation = value)"
    OnRestartConfirmed="RestartGame" />

@code {
    private bool collapseNavMenu = true;
    private bool _showRestartConfirmation = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        GameStateService.SummaryBoardVisibilityChanged += OnSummaryBoardVisibilityChanged;
    }

    private void OnSummaryBoardVisibilityChanged(bool isVisible)
    {
        StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void ShowRestartConfirmation()
    {
        _showRestartConfirmation = true;
    }

    private async Task RestartGame()
    {
        var success = await GameRestartService.RestartGameAsync();
        if (success)
        {
            // Reload the page to show the new state
            Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
        }
    }

    public void Dispose()
    {
        GameStateService.SummaryBoardVisibilityChanged -= OnSummaryBoardVisibilityChanged;
    }
}
