@page "/employees"
@using KanbanGame.Shared
@using KanbanGamev2.Client.Services
@using KanbanGamev2.Client.Components
@inject IEmployeeService EmployeeService

<PageTitle>Employees</PageTitle>

<h1>Employees</h1>

@if (EmployeeService.Employees.Count == 0)
{
    <p>Loading employees...</p>
}
else
{
    <div class="row">
        @foreach (var employee in EmployeeService.Employees)
        {
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@employee.Name</h5>
                        <div class="role-badges-container mb-2">
                            <RoleBadges Employee="@employee" />
                        </div>
                        <p class="card-text">
                            <strong>Learned Roles:</strong> @string.Join(", ", employee.LearnedRoles.Select(r => r.GetDisplayName()))<br/>
                            <strong>Department:</strong> @employee.Department.GetDisplayName()<br/>
                            <strong>Seniority:</strong> @employee.Seniority.GetDisplayName()<br/>
                            <strong>Email:</strong> @employee.Email<br/>
                            <strong>Status:</strong> 
                            @if (employee.IsAvailable)
                            {
                                <span class="badge bg-success">Available</span>
                            }
                            else
                            {
                                <span class="badge bg-warning">Busy</span>
                            }
                        </p>
                        @if (employee.LearnableRoles.Any())
                        {
                            <div class="mt-2">
                                <small class="text-muted">
                                    <strong>Can learn:</strong> 
                                    @string.Join(", ", employee.LearnableRoles.Select(r => r.GetDisplayName()))
                                </small>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await EmployeeService.GetEmployees();
    }
} 